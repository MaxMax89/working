================================================================================
# ПОЛЕЗНЫЕ КОМАНДЫ ДЛЯ РАБОТЫ В ТЕРМИНАЛЕ (SSH КОНСОЛЬ)
================================================================================

# Доп инфо:  
https://github.com/igorcomputer/terminal
https://www.youtube.com/watch?v=AvT_MDXRjp 

================================================================================
# БАЗОВЫЕ КОМАНДЫ :
================================================================================

# ===== Навигация ===== 

pwd      — показать текущий путь
cd dir1  — перейти в каталог dir1
cd ..    — перейти в каталог на уровень выше
cd ~     — перейти в домашний каталог текущего пользователя
ls -l    — показать все файлы в текущем каталоге (расширенный вид)
ls -la   — показать все файлы (в том числе скрытые)  

# ===== Создание и копирование ===== 

touch file1.txt       — создать файл file1.txt
cp file1 dir1         — скопировать файл file1 в каталог dir1
mkdir dir1            — создать каталог dir1
cp -R cat/src new/dir — скопировать каталог "src" в каталог "dir"  

# ===== Переименование и перемещение ===== 

mv file1.txt newfile.txt — переименовать файл file1.txt в файл newfile.txt
mv file.txt dir1         — перенести файл file.txt в каталог dir1
mv file.txt ..           — перенос файла на уровень выше
mv file.txt ~/dir        — перенос файла в каталог dir домашнего каталога

# ===== Удаление файлов и каталогов ===== 

rm file1.txt    — Удалить файл "file1.txt"
rm dir -r       — Удалить каталог "dir" 

# Ключ -r означает рекурсивное удаление
# Для пустых каталогов ключ -r можно не использовать.

rm -Rf htdocs/  - Удаление всех файлов в каталоге htdocs и подкаталогах  
                  (никаких уведомлений не высвечивается) 
                    
# Удалить файлы по маске 
find <path> -type f -name "*.txt" -delete     - <path> путь к каталогу 

# Доп инфа по удалению файлов: 
https://losst.ru/kak-udalit-fajl-cherez-terminal-linux

# ===== Права и пользователи # ===== 

whoami       - Имя текущего пользователя
id           - Информация о текущем пользователе 
id -Gn       - Список имен групп текущего пользователя
id -Gn USER  - Группы определенного пользователя 
groups       - Группы текущего пользователя (аналог предыдущей команды) 
ls -l        - Список файлов с правами (показывает символические ссылки) 
ls -la       - Список файлов с правами (Также показывает скрытые файлы и каталоги)

# ===== Подключение по SSH # ===== 

ssh login@176.57.210.37  - подключение к серверу с логином (запрос пароля) 
ssh login@domain.ru      - подключение с использованием домена 

================================================================================
# РАЗМЕРЫ ФАЙЛОВ И КАТАЛОГОВ
================================================================================

du -sh *      - в текущем каталоге 
du -sh [путь] - в каталоге, указанном в [пути] к нему 

du file.txt     - размеры файла file.txt в байтах 
du -k file.txt  - В килобайтах 
du -m file.txt  - В мегабайтах
du -g file.txt  - В гигайбайтах 
du -h file.txt  - В удобочитаемом виде (единица измерения подстраивается)

#Список файлов с указанием размеров: 
ls -la --block-size=M - размер файлов в Мегабайтах 

================================================================================
# КОЛИЧЕСТВО ФАЙЛОВ И КАТАЛОГОВ
================================================================================

$ find images/ -type f | wc -l         # Кол-во файлов-1 (с учетом вложенных)
$ find images/ -type d | wc -l         # Кол-во каталогов-1 (с учетом вложенных) 
$ find images/ -name '*.jpg' | wc -l   # Кол-во файлов ".jpg" 
$ find images/ -name '*.png' | wc -l   # Кол-во файлов ".png" 

================================================================================
# ПОИСК: 
================================================================================

find . -name shadow.gif      - Поиск ПО ИМЕНАМ ФАЙЛОВ (рекурсивный поиск по текущему каталогу) 
find . -type f -name '*.php' - Поиск файлов ПО РАСШИРЕНИЮ (аналогично по маске) 
grep -r "find text" ./       - Поиск ПО ТЕКСТУ В ФАЙЛАХ в текущем каталоге (-r - рекурсивный) 

# Поиск файлов в текущем каталоге по маске и запись в лог файл: 
find ./ -type f -name "*.optipic-orig" > log_optipic.txt 

================================================================================
# WATCH - Отслеживание изменений в реальном времени:
================================================================================

watch -n 1 "du -h my_file.zip"  - Покажет изменение размеров файла при загрузке (c шагом 1 сек) 
watch 'cat log.txt'             - Вывод на экран содержимого файла log.txt, которое может менятся со временем. 
watch 'example.sh; cat log.txt' - Тоже самое, но сначала запускается файл example.sh, который пишет в файл log.txt данные. 

================================================================================
# АРХИВАЦИЯ ФАЙЛОВ И КАТАЛОГОВ
================================================================================

# ===== ZIP Архивация =====

zip -r dir.zip dir  – архивация каталога "dir"
zip -r dir.zip ./   - архивация файлов в текущем каталоге 

unzip archive.zip   – Извлечение данных из архива "archive.zip"
gzip -d backup.gz   – Извлечение файла запакованного как .gz
# -d  – в консоль будет выводиться информация о процессе архивации
# -r  – ключ, означающий рекурсивную архивацию

# ===== ZIP Архивация с исключением каталогов ===== 

zip -r backuup.zip ./ -x "mytest/test/*" "test2/*"
# mytest/test/, test2/ - не попадут в результирующий архив 
# -x  - Флаг исключения 

# ===== TAR.GZ Архивация  =====

tar -zcvf folder.tar.gz folder/ - Архивация каталога "folder"
tar -zcvf folder.tar.gz folder  - тоже самое 
# Запуск команды из каталога, в котором лежит каталог,
# для которого необходимо сделать архив.
# Архив будет положен рядом с текущим каталогом 

# ===== TAR.GZ Архивация с исключением каталогов ===== 

tar -zcvf backup_06042020.tar.gz --exclude='bitrix/backup/*' ./

# ===== Объединение архивов ===== 

cat archive.tar* > newfile.tar.gz 
# работает для количества архивов больше 2-х
# * - означает любые символы

================================================================================
# ШИФРОВАНИЕ ФАЙЛОВ 
================================================================================

openssl des3 -salt -in file.txt -out file.crypted -k PASS
openssl des3 -d -salt -in file.crypted -out file_decripted.txt -k PASS

# file.txt           - исходный файл
# file.crypted       - зашифрованный файл (имя и расширение придумываем сами) 
# file_decripted.txt - расшифрованный файл 
# PASS               - пароль

# Доп инфо:  
https://www.shellhacks.com/ru/encrypt-decrypt-file-password-openssl/

================================================================================
# БЭКАПЫ БАЗ ДАННЫХ
================================================================================

mysqldump -uDBUSER -pDBPASS DBNAME > DBNAME.sql    - выгрузка в файл 
mysql -uDBUSER -pDBPASS DBNAME < DBNAME.sql        - заливка в базу из файла 

# DBNAME > DBNAME.sql  - означает из базы в файл (стрелка ">") 
# DBNAME < DBNAME.sql  - означает из файла в базу (стрелка ">") 
# -u, -p     - префиксы ключи (пользователь и пароль) 
# DBNAME     - Имя БД
# DBUSER     - Пользователь БД 
# DBPASS     - Пароль БД
# DBNAME.sql - файл бэкапа базы данных (можно добавить еще дату создания) 

================================================================================
# НАСТРОЙКА ПРАВ:
================================================================================

chmod g+w <file>  # Установка прав для группы на запись в файл 
http://www.linuxcenter.ru/lib/books/kostromin/gl_04_05.phtml

# Установка прав для каталога и файлов: 
find /home/data/upload -type d -exec chmod 755 {} \; 
find /home/data/upload -type f -exec chmod 644 {} \; 

# Установка группы и владельца для каталога и файлов: 
find /home/data/upload -type d -exec chown bitrix:bitrix {} \; 
find /home/data/upload -type f -exec chown bitrix:bitrix {} \; 

================================================================================
УДАЛЕНИЕ КОДИРОВКИ BOM 
================================================================================

# ===== Удаление BOM из файла =====

sed -i '1s/^\xEF\xBB\xBF//' index.php

# ===== Удалить кодировку BOM из файлов по маске =====

# Удаляет во всех файлах BOM 
find . -type f -name '*.php' -exec sed -i -r '1s/^\xEF\xBB\xBF//' {} \; 

# Доп Инфо: 
https://unix.stackexchange.com/questions/381230/how-can-i-remove-the-bom-from-a-utf-8-file
http://thegreyblog.blogspot.com/2010/09/shell-script-to-find-and-remove-bom.html

================================================================================
# NETCAT - СКАНИРОВАНИЕ ПОРТОВ
================================================================================

netcat -z -v site.ru 1-1000            - Сканирование портов по домену 
netcat -z -n -v 175.55.210.36 1-1000   - Сканирование портов по IP  

================================================================================
# ЗАПУСК "Sublime Text" из терминала (Для Mac OS): 
================================================================================ 

# добавление симлинка "subl" 
$ ln -s /Applications/Sublime\ Text.app/Contents/SharedSupport/bin/subl /usr/local/bin/subl
$ subl .  - Открыть в Sublime Text текущее местоположение 

================================================================================
# Настройки и установленные симлинки 
================================================================================

$ cd /usr/local/bin   - Переход в каталог программ, которые может запустить пользователь 
$ ls -la              - Просмотр всех симлинков в MAC OS: 
